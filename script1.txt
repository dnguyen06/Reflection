======================================================
Filename: script1.txt
Running Test: ClassA
Recursive: true
CLASS
Class: ClassA
SUPERCLASS -> Recursively Inspect
Superclass : java.lang.Object
	CLASS
	Class: java.lang.Object
	Superclass: NONE
	INTERFACES( java.lang.Object )
	Interfaces-> NONE
	CONSTRUCTORS( java.lang.Object )
	Constructors->
	 CONSTRUCTOR
	  Name: java.lang.Object
	  Parameter types:
	  Modifiers: public
	METHODS( java.lang.Object )
	Methods->
	 METHOD
	  Name: finalize
	  Exceptions->
	  class java.lang.Throwable
	  Parameter types-> NONE
	  Return type: void
	  Modifiers: protected
	 METHOD
	  Name: wait
	  Exceptions->
	  class java.lang.InterruptedException
	  Parameter types-> NONE
	  Return type: void
	  Modifiers: public final
	 METHOD
	  Name: wait
	  Exceptions->
	  class java.lang.InterruptedException
	  Parameter types->
	  long
	  int
	  Return type: void
	  Modifiers: public final
	 METHOD
	  Name: wait
	  Exceptions->
	  class java.lang.InterruptedException
	  Parameter types->
	  long
	  Return type: void
	  Modifiers: public final native
	 METHOD
	  Name: equals
	  Exceptions-> NONE
	  Parameter types->
	  class java.lang.Object
	  Return type: boolean
	  Modifiers: public
	 METHOD
	  Name: toString
	  Exceptions-> NONE
	  Parameter types-> NONE
	  Return type: class java.lang.String
	  Modifiers: public
	 METHOD
	  Name: hashCode
	  Exceptions-> NONE
	  Parameter types-> NONE
	  Return type: int
	  Modifiers: public native
	 METHOD
	  Name: getClass
	  Exceptions-> NONE
	  Parameter types-> NONE
	  Return type: class java.lang.Class
	  Modifiers: public final native
	 METHOD
	  Name: clone
	  Exceptions->
	  class java.lang.CloneNotSupportedException
	  Parameter types-> NONE
	  Return type: class java.lang.Object
	  Modifiers: protected native
	 METHOD
	  Name: notify
	  Exceptions-> NONE
	  Parameter types-> NONE
	  Return type: void
	  Modifiers: public final native
	 METHOD
	  Name: notifyAll
	  Exceptions-> NONE
	  Parameter types-> NONE
	  Return type: void
	  Modifiers: public final native
	 METHOD
	  Name: registerNatives
	  Exceptions-> NONE
	  Parameter types-> NONE
	  Return type: void
	  Modifiers: private static native
	FIELDS( java.lang.Object )
	Fields-> NONE
INTERFACES( ClassA )
Interfaces->
 INTERFACE -> Recursively Inspect
 java.io.Serializable
	CLASS
	Class: java.io.Serializable
	Superclass: NONE
	INTERFACES( java.io.Serializable )
	Interfaces-> NONE
	CONSTRUCTORS( java.io.Serializable )
	Constructor-> NONE
	METHODS( java.io.Serializable )
	Methods-> NONE
	FIELDS( java.io.Serializable )
	Fields-> NONE
 INTERFACE -> Recursively Inspect
 java.lang.Runnable
	CLASS
	Class: java.lang.Runnable
	Superclass: NONE
	INTERFACES( java.lang.Runnable )
	Interfaces-> NONE
	CONSTRUCTORS( java.lang.Runnable )
	Constructor-> NONE
	METHODS( java.lang.Runnable )
	Methods->
	 METHOD
	  Name: run
	  Exceptions-> NONE
	  Parameter types-> NONE
	  Return type: void
	  Modifiers: public abstract
	FIELDS( java.lang.Runnable )
	Fields-> NONE
CONSTRUCTORS( ClassA )
Constructors->
 CONSTRUCTOR
  Name: ClassA
  Parameter types:
  Modifiers: public
 CONSTRUCTOR
  Name: ClassA
  Parameter types:
  int
  Modifiers: public
METHODS( ClassA )
Methods->
 METHOD
  Name: run
  Exceptions-> NONE
  Parameter types-> NONE
  Return type: void
  Modifiers: public
 METHOD
  Name: toString
  Exceptions-> NONE
  Parameter types-> NONE
  Return type: class java.lang.String
  Modifiers: public
 METHOD
  Name: setVal
  Exceptions->
  class java.lang.Exception
  Parameter types->
  int
  Return type: void
  Modifiers: public
 METHOD
  Name: getVal
  Exceptions-> NONE
  Parameter types-> NONE
  Return type: int
  Modifiers: public
 METHOD
  Name: printSomething
  Exceptions-> NONE
  Parameter types-> NONE
  Return type: void
  Modifiers: private
FIELDS( ClassA )
Fields->
 FIELD
  Name: val
  Type: int
  Modifiers: private
  Value: 3
 FIELD
  Name: val2
  Type: double
  Modifiers: private
  Value: 0.2
 FIELD
  Name: val3
  Type: boolean
  Modifiers: private
  Value: true
======================================================
