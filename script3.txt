======================================================
Filename: script3.txt
Running Test: ClassB
Recursive: true
CLASS
Class: ClassB
SUPERCLASS -> Recursively Inspect
Superclass : ClassC
	CLASS
	Class: ClassC
	SUPERCLASS -> Recursively Inspect
	Superclass : ClassD
		CLASS
		Class: ClassD
		SUPERCLASS -> Recursively Inspect
		Superclass : java.lang.Object
			CLASS
			Class: java.lang.Object
			Superclass: NONE
			INTERFACES( java.lang.Object )
			Interfaces-> NONE
			CONSTRUCTORS( java.lang.Object )
			Constructors->
			 CONSTRUCTOR
			  Name: java.lang.Object
			  Parameter types:
			  Modifiers: public
			METHODS( java.lang.Object )
			Methods->
			 METHOD
			  Name: finalize
			  Exceptions->
			  class java.lang.Throwable
			  Parameter types-> NONE
			  Return type: void
			  Modifiers: protected
			 METHOD
			  Name: wait
			  Exceptions->
			  class java.lang.InterruptedException
			  Parameter types-> NONE
			  Return type: void
			  Modifiers: public final
			 METHOD
			  Name: wait
			  Exceptions->
			  class java.lang.InterruptedException
			  Parameter types->
			  long
			  int
			  Return type: void
			  Modifiers: public final
			 METHOD
			  Name: wait
			  Exceptions->
			  class java.lang.InterruptedException
			  Parameter types->
			  long
			  Return type: void
			  Modifiers: public final native
			 METHOD
			  Name: equals
			  Exceptions-> NONE
			  Parameter types->
			  class java.lang.Object
			  Return type: boolean
			  Modifiers: public
			 METHOD
			  Name: toString
			  Exceptions-> NONE
			  Parameter types-> NONE
			  Return type: class java.lang.String
			  Modifiers: public
			 METHOD
			  Name: hashCode
			  Exceptions-> NONE
			  Parameter types-> NONE
			  Return type: int
			  Modifiers: public native
			 METHOD
			  Name: getClass
			  Exceptions-> NONE
			  Parameter types-> NONE
			  Return type: class java.lang.Class
			  Modifiers: public final native
			 METHOD
			  Name: clone
			  Exceptions->
			  class java.lang.CloneNotSupportedException
			  Parameter types-> NONE
			  Return type: class java.lang.Object
			  Modifiers: protected native
			 METHOD
			  Name: notify
			  Exceptions-> NONE
			  Parameter types-> NONE
			  Return type: void
			  Modifiers: public final native
			 METHOD
			  Name: notifyAll
			  Exceptions-> NONE
			  Parameter types-> NONE
			  Return type: void
			  Modifiers: public final native
			 METHOD
			  Name: registerNatives
			  Exceptions-> NONE
			  Parameter types-> NONE
			  Return type: void
			  Modifiers: private static native
			FIELDS( java.lang.Object )
			Fields-> NONE
		INTERFACES( ClassD )
		Interfaces-> NONE
		CONSTRUCTORS( ClassD )
		Constructors->
		 CONSTRUCTOR
		  Name: ClassD
		  Parameter types:
		  Modifiers: public
		 CONSTRUCTOR
		  Name: ClassD
		  Parameter types:
		  int
		  Modifiers: public
		METHODS( ClassD )
		Methods->
		 METHOD
		  Name: toString
		  Exceptions-> NONE
		  Parameter types-> NONE
		  Return type: class java.lang.String
		  Modifiers: public
		 METHOD
		  Name: getVal3
		  Exceptions-> NONE
		  Parameter types-> NONE
		  Return type: int
		  Modifiers: public
		FIELDS( ClassD )
		Fields->
		 FIELD
		  Name: val
		  Type: class ClassA
		  Modifiers: private
		  Value (ref): ClassA@1550089733
		   -> Recursively inspect
			CLASS
			Class: ClassA
			SUPERCLASS -> Recursively Inspect
			Superclass : java.lang.Object
				CLASS
				Class: java.lang.Object
				Superclass: NONE
				INTERFACES( java.lang.Object )
				Interfaces-> NONE
				CONSTRUCTORS( java.lang.Object )
				Constructors->
				 CONSTRUCTOR
				  Name: java.lang.Object
				  Parameter types:
				  Modifiers: public
				METHODS( java.lang.Object )
				Methods->
				 METHOD
				  Name: finalize
				  Exceptions->
				  class java.lang.Throwable
				  Parameter types-> NONE
				  Return type: void
				  Modifiers: protected
				 METHOD
				  Name: wait
				  Exceptions->
				  class java.lang.InterruptedException
				  Parameter types-> NONE
				  Return type: void
				  Modifiers: public final
				 METHOD
				  Name: wait
				  Exceptions->
				  class java.lang.InterruptedException
				  Parameter types->
				  long
				  int
				  Return type: void
				  Modifiers: public final
				 METHOD
				  Name: wait
				  Exceptions->
				  class java.lang.InterruptedException
				  Parameter types->
				  long
				  Return type: void
				  Modifiers: public final native
				 METHOD
				  Name: equals
				  Exceptions-> NONE
				  Parameter types->
				  class java.lang.Object
				  Return type: boolean
				  Modifiers: public
				 METHOD
				  Name: toString
				  Exceptions-> NONE
				  Parameter types-> NONE
				  Return type: class java.lang.String
				  Modifiers: public
				 METHOD
				  Name: hashCode
				  Exceptions-> NONE
				  Parameter types-> NONE
				  Return type: int
				  Modifiers: public native
				 METHOD
				  Name: getClass
				  Exceptions-> NONE
				  Parameter types-> NONE
				  Return type: class java.lang.Class
				  Modifiers: public final native
				 METHOD
				  Name: clone
				  Exceptions->
				  class java.lang.CloneNotSupportedException
				  Parameter types-> NONE
				  Return type: class java.lang.Object
				  Modifiers: protected native
				 METHOD
				  Name: notify
				  Exceptions-> NONE
				  Parameter types-> NONE
				  Return type: void
				  Modifiers: public final native
				 METHOD
				  Name: notifyAll
				  Exceptions-> NONE
				  Parameter types-> NONE
				  Return type: void
				  Modifiers: public final native
				 METHOD
				  Name: registerNatives
				  Exceptions-> NONE
				  Parameter types-> NONE
				  Return type: void
				  Modifiers: private static native
				FIELDS( java.lang.Object )
				Fields-> NONE
			INTERFACES( ClassA )
			Interfaces->
			 INTERFACE -> Recursively Inspect
			 java.io.Serializable
				CLASS
				Class: java.io.Serializable
				Superclass: NONE
				INTERFACES( java.io.Serializable )
				Interfaces-> NONE
				CONSTRUCTORS( java.io.Serializable )
				Constructor-> NONE
				METHODS( java.io.Serializable )
				Methods-> NONE
				FIELDS( java.io.Serializable )
				Fields-> NONE
			 INTERFACE -> Recursively Inspect
			 java.lang.Runnable
				CLASS
				Class: java.lang.Runnable
				Superclass: NONE
				INTERFACES( java.lang.Runnable )
				Interfaces-> NONE
				CONSTRUCTORS( java.lang.Runnable )
				Constructor-> NONE
				METHODS( java.lang.Runnable )
				Methods->
				 METHOD
				  Name: run
				  Exceptions-> NONE
				  Parameter types-> NONE
				  Return type: void
				  Modifiers: public abstract
				FIELDS( java.lang.Runnable )
				Fields-> NONE
			CONSTRUCTORS( ClassA )
			Constructors->
			 CONSTRUCTOR
			  Name: ClassA
			  Parameter types:
			  Modifiers: public
			 CONSTRUCTOR
			  Name: ClassA
			  Parameter types:
			  int
			  Modifiers: public
			METHODS( ClassA )
			Methods->
			 METHOD
			  Name: run
			  Exceptions-> NONE
			  Parameter types-> NONE
			  Return type: void
			  Modifiers: public
			 METHOD
			  Name: toString
			  Exceptions-> NONE
			  Parameter types-> NONE
			  Return type: class java.lang.String
			  Modifiers: public
			 METHOD
			  Name: setVal
			  Exceptions->
			  class java.lang.Exception
			  Parameter types->
			  int
			  Return type: void
			  Modifiers: public
			 METHOD
			  Name: getVal
			  Exceptions-> NONE
			  Parameter types-> NONE
			  Return type: int
			  Modifiers: public
			 METHOD
			  Name: printSomething
			  Exceptions-> NONE
			  Parameter types-> NONE
			  Return type: void
			  Modifiers: private
			FIELDS( ClassA )
			Fields->
			 FIELD
			  Name: val
			  Type: int
			  Modifiers: private
			  Value: 17
			 FIELD
			  Name: val2
			  Type: double
			  Modifiers: private
			  Value: 0.2
			 FIELD
			  Name: val3
			  Type: boolean
			  Modifiers: private
			  Value: true
		 FIELD
		  Name: val2
		  Type: class ClassA
		  Modifiers: private static
		  Value (ref): null
		 FIELD
		  Name: val3
		  Type: int
		  Modifiers: private
		  Value: 34
		 FIELD
		  Name: vallarray
		  Type: class [LClassA;
		  Modifiers: private
		  Component Type: class ClassA
		  Length: 10
		  Entries->
		   Value: null
		   Value: null
		   Value: null
		   Value: null
		   Value: null
		   Value: null
		   Value: null
		   Value: null
		   Value: null
		   Value: null
	INTERFACES( ClassC )
	Interfaces->
	 INTERFACE -> Recursively Inspect
	 InterfaceA
		CLASS
		Class: InterfaceA
		Superclass: NONE
		INTERFACES( InterfaceA )
		Interfaces->
		 INTERFACE -> Recursively Inspect
		 InterfaceB
			CLASS
			Class: InterfaceB
			Superclass: NONE
			INTERFACES( InterfaceB )
			Interfaces-> NONE
			CONSTRUCTORS( InterfaceB )
			Constructor-> NONE
			METHODS( InterfaceB )
			Methods->
			 METHOD
			  Name: func0
			  Exceptions->
			  class java.lang.Exception
			  Parameter types->
			  int
			  boolean
			  Return type: void
			  Modifiers: public abstract
			FIELDS( InterfaceB )
			Fields-> NONE
		CONSTRUCTORS( InterfaceA )
		Constructor-> NONE
		METHODS( InterfaceA )
		Methods->
		 METHOD
		  Name: func1
		  Exceptions->
		  class java.lang.Exception
		  Parameter types->
		  int
		  double
		  boolean
		  class java.lang.String
		  Return type: void
		  Modifiers: public abstract
		 METHOD
		  Name: func2
		  Exceptions->
		  class java.lang.Exception
		  class java.lang.ArithmeticException
		  class java.lang.IllegalMonitorStateException
		  Parameter types->
		  class java.lang.String
		  Return type: int
		  Modifiers: public abstract
		FIELDS( InterfaceA )
		Fields-> NONE
	CONSTRUCTORS( ClassC )
	Constructors->
	 CONSTRUCTOR
	  Name: ClassC
	  Parameter types:
	  Modifiers: public
	 CONSTRUCTOR
	  Name: ClassC
	  Parameter types:
	  int
	  int
	  Modifiers: public
	METHODS( ClassC )
	Methods->
	 METHOD
	  Name: run
	  Exceptions-> NONE
	  Parameter types-> NONE
	  Return type: void
	  Modifiers: public
	 METHOD
	  Name: toString
	  Exceptions-> NONE
	  Parameter types-> NONE
	  Return type: class java.lang.String
	  Modifiers: public
	 METHOD
	  Name: func0
	  Exceptions->
	  class java.lang.Exception
	  Parameter types->
	  int
	  boolean
	  Return type: void
	  Modifiers: public
	 METHOD
	  Name: func1
	  Exceptions->
	  class java.lang.Exception
	  Parameter types->
	  int
	  double
	  boolean
	  class java.lang.String
	  Return type: void
	  Modifiers: public
	 METHOD
	  Name: func2
	  Exceptions->
	  class java.lang.Exception
	  class java.lang.ArithmeticException
	  class java.lang.IllegalMonitorStateException
	  Parameter types->
	  class java.lang.String
	  Return type: int
	  Modifiers: public
	 METHOD
	  Name: func3
	  Exceptions-> NONE
	  Parameter types->
	  int
	  Return type: void
	  Modifiers: public abstract
	FIELDS( ClassC )
	Fields->
	 FIELD
	  Name: val2
	  Type: class ClassA
	  Modifiers: private
	  Value (ref): ClassA@1975012498
	   -> Recursively inspect
		CLASS
		Class: ClassA
		SUPERCLASS -> Recursively Inspect
		Superclass : java.lang.Object
			CLASS
			Class: java.lang.Object
			Superclass: NONE
			INTERFACES( java.lang.Object )
			Interfaces-> NONE
			CONSTRUCTORS( java.lang.Object )
			Constructors->
			 CONSTRUCTOR
			  Name: java.lang.Object
			  Parameter types:
			  Modifiers: public
			METHODS( java.lang.Object )
			Methods->
			 METHOD
			  Name: finalize
			  Exceptions->
			  class java.lang.Throwable
			  Parameter types-> NONE
			  Return type: void
			  Modifiers: protected
			 METHOD
			  Name: wait
			  Exceptions->
			  class java.lang.InterruptedException
			  Parameter types-> NONE
			  Return type: void
			  Modifiers: public final
			 METHOD
			  Name: wait
			  Exceptions->
			  class java.lang.InterruptedException
			  Parameter types->
			  long
			  int
			  Return type: void
			  Modifiers: public final
			 METHOD
			  Name: wait
			  Exceptions->
			  class java.lang.InterruptedException
			  Parameter types->
			  long
			  Return type: void
			  Modifiers: public final native
			 METHOD
			  Name: equals
			  Exceptions-> NONE
			  Parameter types->
			  class java.lang.Object
			  Return type: boolean
			  Modifiers: public
			 METHOD
			  Name: toString
			  Exceptions-> NONE
			  Parameter types-> NONE
			  Return type: class java.lang.String
			  Modifiers: public
			 METHOD
			  Name: hashCode
			  Exceptions-> NONE
			  Parameter types-> NONE
			  Return type: int
			  Modifiers: public native
			 METHOD
			  Name: getClass
			  Exceptions-> NONE
			  Parameter types-> NONE
			  Return type: class java.lang.Class
			  Modifiers: public final native
			 METHOD
			  Name: clone
			  Exceptions->
			  class java.lang.CloneNotSupportedException
			  Parameter types-> NONE
			  Return type: class java.lang.Object
			  Modifiers: protected native
			 METHOD
			  Name: notify
			  Exceptions-> NONE
			  Parameter types-> NONE
			  Return type: void
			  Modifiers: public final native
			 METHOD
			  Name: notifyAll
			  Exceptions-> NONE
			  Parameter types-> NONE
			  Return type: void
			  Modifiers: public final native
			 METHOD
			  Name: registerNatives
			  Exceptions-> NONE
			  Parameter types-> NONE
			  Return type: void
			  Modifiers: private static native
			FIELDS( java.lang.Object )
			Fields-> NONE
		INTERFACES( ClassA )
		Interfaces->
		 INTERFACE -> Recursively Inspect
		 java.io.Serializable
			CLASS
			Class: java.io.Serializable
			Superclass: NONE
			INTERFACES( java.io.Serializable )
			Interfaces-> NONE
			CONSTRUCTORS( java.io.Serializable )
			Constructor-> NONE
			METHODS( java.io.Serializable )
			Methods-> NONE
			FIELDS( java.io.Serializable )
			Fields-> NONE
		 INTERFACE -> Recursively Inspect
		 java.lang.Runnable
			CLASS
			Class: java.lang.Runnable
			Superclass: NONE
			INTERFACES( java.lang.Runnable )
			Interfaces-> NONE
			CONSTRUCTORS( java.lang.Runnable )
			Constructor-> NONE
			METHODS( java.lang.Runnable )
			Methods->
			 METHOD
			  Name: run
			  Exceptions-> NONE
			  Parameter types-> NONE
			  Return type: void
			  Modifiers: public abstract
			FIELDS( java.lang.Runnable )
			Fields-> NONE
		CONSTRUCTORS( ClassA )
		Constructors->
		 CONSTRUCTOR
		  Name: ClassA
		  Parameter types:
		  Modifiers: public
		 CONSTRUCTOR
		  Name: ClassA
		  Parameter types:
		  int
		  Modifiers: public
		METHODS( ClassA )
		Methods->
		 METHOD
		  Name: run
		  Exceptions-> NONE
		  Parameter types-> NONE
		  Return type: void
		  Modifiers: public
		 METHOD
		  Name: toString
		  Exceptions-> NONE
		  Parameter types-> NONE
		  Return type: class java.lang.String
		  Modifiers: public
		 METHOD
		  Name: setVal
		  Exceptions->
		  class java.lang.Exception
		  Parameter types->
		  int
		  Return type: void
		  Modifiers: public
		 METHOD
		  Name: getVal
		  Exceptions-> NONE
		  Parameter types-> NONE
		  Return type: int
		  Modifiers: public
		 METHOD
		  Name: printSomething
		  Exceptions-> NONE
		  Parameter types-> NONE
		  Return type: void
		  Modifiers: private
		FIELDS( ClassA )
		Fields->
		 FIELD
		  Name: val
		  Type: int
		  Modifiers: private
		  Value: 100
		 FIELD
		  Name: val2
		  Type: double
		  Modifiers: private
		  Value: 0.2
		 FIELD
		  Name: val3
		  Type: boolean
		  Modifiers: private
		  Value: true
	 FIELD
	  Name: val3
	  Type: class ClassA
	  Modifiers: private
	  Value (ref): ClassA@1808253012
	   -> Recursively inspect
		CLASS
		Class: ClassA
		SUPERCLASS -> Recursively Inspect
		Superclass : java.lang.Object
			CLASS
			Class: java.lang.Object
			Superclass: NONE
			INTERFACES( java.lang.Object )
			Interfaces-> NONE
			CONSTRUCTORS( java.lang.Object )
			Constructors->
			 CONSTRUCTOR
			  Name: java.lang.Object
			  Parameter types:
			  Modifiers: public
			METHODS( java.lang.Object )
			Methods->
			 METHOD
			  Name: finalize
			  Exceptions->
			  class java.lang.Throwable
			  Parameter types-> NONE
			  Return type: void
			  Modifiers: protected
			 METHOD
			  Name: wait
			  Exceptions->
			  class java.lang.InterruptedException
			  Parameter types-> NONE
			  Return type: void
			  Modifiers: public final
			 METHOD
			  Name: wait
			  Exceptions->
			  class java.lang.InterruptedException
			  Parameter types->
			  long
			  int
			  Return type: void
			  Modifiers: public final
			 METHOD
			  Name: wait
			  Exceptions->
			  class java.lang.InterruptedException
			  Parameter types->
			  long
			  Return type: void
			  Modifiers: public final native
			 METHOD
			  Name: equals
			  Exceptions-> NONE
			  Parameter types->
			  class java.lang.Object
			  Return type: boolean
			  Modifiers: public
			 METHOD
			  Name: toString
			  Exceptions-> NONE
			  Parameter types-> NONE
			  Return type: class java.lang.String
			  Modifiers: public
			 METHOD
			  Name: hashCode
			  Exceptions-> NONE
			  Parameter types-> NONE
			  Return type: int
			  Modifiers: public native
			 METHOD
			  Name: getClass
			  Exceptions-> NONE
			  Parameter types-> NONE
			  Return type: class java.lang.Class
			  Modifiers: public final native
			 METHOD
			  Name: clone
			  Exceptions->
			  class java.lang.CloneNotSupportedException
			  Parameter types-> NONE
			  Return type: class java.lang.Object
			  Modifiers: protected native
			 METHOD
			  Name: notify
			  Exceptions-> NONE
			  Parameter types-> NONE
			  Return type: void
			  Modifiers: public final native
			 METHOD
			  Name: notifyAll
			  Exceptions-> NONE
			  Parameter types-> NONE
			  Return type: void
			  Modifiers: public final native
			 METHOD
			  Name: registerNatives
			  Exceptions-> NONE
			  Parameter types-> NONE
			  Return type: void
			  Modifiers: private static native
			FIELDS( java.lang.Object )
			Fields-> NONE
		INTERFACES( ClassA )
		Interfaces->
		 INTERFACE -> Recursively Inspect
		 java.io.Serializable
			CLASS
			Class: java.io.Serializable
			Superclass: NONE
			INTERFACES( java.io.Serializable )
			Interfaces-> NONE
			CONSTRUCTORS( java.io.Serializable )
			Constructor-> NONE
			METHODS( java.io.Serializable )
			Methods-> NONE
			FIELDS( java.io.Serializable )
			Fields-> NONE
		 INTERFACE -> Recursively Inspect
		 java.lang.Runnable
			CLASS
			Class: java.lang.Runnable
			Superclass: NONE
			INTERFACES( java.lang.Runnable )
			Interfaces-> NONE
			CONSTRUCTORS( java.lang.Runnable )
			Constructor-> NONE
			METHODS( java.lang.Runnable )
			Methods->
			 METHOD
			  Name: run
			  Exceptions-> NONE
			  Parameter types-> NONE
			  Return type: void
			  Modifiers: public abstract
			FIELDS( java.lang.Runnable )
			Fields-> NONE
		CONSTRUCTORS( ClassA )
		Constructors->
		 CONSTRUCTOR
		  Name: ClassA
		  Parameter types:
		  Modifiers: public
		 CONSTRUCTOR
		  Name: ClassA
		  Parameter types:
		  int
		  Modifiers: public
		METHODS( ClassA )
		Methods->
		 METHOD
		  Name: run
		  Exceptions-> NONE
		  Parameter types-> NONE
		  Return type: void
		  Modifiers: public
		 METHOD
		  Name: toString
		  Exceptions-> NONE
		  Parameter types-> NONE
		  Return type: class java.lang.String
		  Modifiers: public
		 METHOD
		  Name: setVal
		  Exceptions->
		  class java.lang.Exception
		  Parameter types->
		  int
		  Return type: void
		  Modifiers: public
		 METHOD
		  Name: getVal
		  Exceptions-> NONE
		  Parameter types-> NONE
		  Return type: int
		  Modifiers: public
		 METHOD
		  Name: printSomething
		  Exceptions-> NONE
		  Parameter types-> NONE
		  Return type: void
		  Modifiers: private
		FIELDS( ClassA )
		Fields->
		 FIELD
		  Name: val
		  Type: int
		  Modifiers: private
		  Value: 2
		 FIELD
		  Name: val2
		  Type: double
		  Modifiers: private
		  Value: 0.2
		 FIELD
		  Name: val3
		  Type: boolean
		  Modifiers: private
		  Value: true
	 FIELD
	  Name: val4
	  Type: class ClassA
	  Modifiers: private
	  Value (ref): ClassA@589431969
	   -> Recursively inspect
		CLASS
		Class: ClassA
		SUPERCLASS -> Recursively Inspect
		Superclass : java.lang.Object
			CLASS
			Class: java.lang.Object
			Superclass: NONE
			INTERFACES( java.lang.Object )
			Interfaces-> NONE
			CONSTRUCTORS( java.lang.Object )
			Constructors->
			 CONSTRUCTOR
			  Name: java.lang.Object
			  Parameter types:
			  Modifiers: public
			METHODS( java.lang.Object )
			Methods->
			 METHOD
			  Name: finalize
			  Exceptions->
			  class java.lang.Throwable
			  Parameter types-> NONE
			  Return type: void
			  Modifiers: protected
			 METHOD
			  Name: wait
			  Exceptions->
			  class java.lang.InterruptedException
			  Parameter types-> NONE
			  Return type: void
			  Modifiers: public final
			 METHOD
			  Name: wait
			  Exceptions->
			  class java.lang.InterruptedException
			  Parameter types->
			  long
			  int
			  Return type: void
			  Modifiers: public final
			 METHOD
			  Name: wait
			  Exceptions->
			  class java.lang.InterruptedException
			  Parameter types->
			  long
			  Return type: void
			  Modifiers: public final native
			 METHOD
			  Name: equals
			  Exceptions-> NONE
			  Parameter types->
			  class java.lang.Object
			  Return type: boolean
			  Modifiers: public
			 METHOD
			  Name: toString
			  Exceptions-> NONE
			  Parameter types-> NONE
			  Return type: class java.lang.String
			  Modifiers: public
			 METHOD
			  Name: hashCode
			  Exceptions-> NONE
			  Parameter types-> NONE
			  Return type: int
			  Modifiers: public native
			 METHOD
			  Name: getClass
			  Exceptions-> NONE
			  Parameter types-> NONE
			  Return type: class java.lang.Class
			  Modifiers: public final native
			 METHOD
			  Name: clone
			  Exceptions->
			  class java.lang.CloneNotSupportedException
			  Parameter types-> NONE
			  Return type: class java.lang.Object
			  Modifiers: protected native
			 METHOD
			  Name: notify
			  Exceptions-> NONE
			  Parameter types-> NONE
			  Return type: void
			  Modifiers: public final native
			 METHOD
			  Name: notifyAll
			  Exceptions-> NONE
			  Parameter types-> NONE
			  Return type: void
			  Modifiers: public final native
			 METHOD
			  Name: registerNatives
			  Exceptions-> NONE
			  Parameter types-> NONE
			  Return type: void
			  Modifiers: private static native
			FIELDS( java.lang.Object )
			Fields-> NONE
		INTERFACES( ClassA )
		Interfaces->
		 INTERFACE -> Recursively Inspect
		 java.io.Serializable
			CLASS
			Class: java.io.Serializable
			Superclass: NONE
			INTERFACES( java.io.Serializable )
			Interfaces-> NONE
			CONSTRUCTORS( java.io.Serializable )
			Constructor-> NONE
			METHODS( java.io.Serializable )
			Methods-> NONE
			FIELDS( java.io.Serializable )
			Fields-> NONE
		 INTERFACE -> Recursively Inspect
		 java.lang.Runnable
			CLASS
			Class: java.lang.Runnable
			Superclass: NONE
			INTERFACES( java.lang.Runnable )
			Interfaces-> NONE
			CONSTRUCTORS( java.lang.Runnable )
			Constructor-> NONE
			METHODS( java.lang.Runnable )
			Methods->
			 METHOD
			  Name: run
			  Exceptions-> NONE
			  Parameter types-> NONE
			  Return type: void
			  Modifiers: public abstract
			FIELDS( java.lang.Runnable )
			Fields-> NONE
		CONSTRUCTORS( ClassA )
		Constructors->
		 CONSTRUCTOR
		  Name: ClassA
		  Parameter types:
		  Modifiers: public
		 CONSTRUCTOR
		  Name: ClassA
		  Parameter types:
		  int
		  Modifiers: public
		METHODS( ClassA )
		Methods->
		 METHOD
		  Name: run
		  Exceptions-> NONE
		  Parameter types-> NONE
		  Return type: void
		  Modifiers: public
		 METHOD
		  Name: toString
		  Exceptions-> NONE
		  Parameter types-> NONE
		  Return type: class java.lang.String
		  Modifiers: public
		 METHOD
		  Name: setVal
		  Exceptions->
		  class java.lang.Exception
		  Parameter types->
		  int
		  Return type: void
		  Modifiers: public
		 METHOD
		  Name: getVal
		  Exceptions-> NONE
		  Parameter types-> NONE
		  Return type: int
		  Modifiers: public
		 METHOD
		  Name: printSomething
		  Exceptions-> NONE
		  Parameter types-> NONE
		  Return type: void
		  Modifiers: private
		FIELDS( ClassA )
		Fields->
		 FIELD
		  Name: val
		  Type: int
		  Modifiers: private
		  Value: 3
		 FIELD
		  Name: val2
		  Type: double
		  Modifiers: private
		  Value: 0.2
		 FIELD
		  Name: val3
		  Type: boolean
		  Modifiers: private
		  Value: true
INTERFACES( ClassB )
Interfaces->
 INTERFACE -> Recursively Inspect
 java.lang.Runnable
	CLASS
	Class: java.lang.Runnable
	Superclass: NONE
	INTERFACES( java.lang.Runnable )
	Interfaces-> NONE
	CONSTRUCTORS( java.lang.Runnable )
	Constructor-> NONE
	METHODS( java.lang.Runnable )
	Methods->
	 METHOD
	  Name: run
	  Exceptions-> NONE
	  Parameter types-> NONE
	  Return type: void
	  Modifiers: public abstract
	FIELDS( java.lang.Runnable )
	Fields-> NONE
CONSTRUCTORS( ClassB )
Constructors->
 CONSTRUCTOR
  Name: ClassB
  Parameter types:
  Modifiers: public
METHODS( ClassB )
Methods->
 METHOD
  Name: run
  Exceptions-> NONE
  Parameter types-> NONE
  Return type: void
  Modifiers: public
 METHOD
  Name: toString
  Exceptions-> NONE
  Parameter types-> NONE
  Return type: class java.lang.String
  Modifiers: public
 METHOD
  Name: func3
  Exceptions-> NONE
  Parameter types->
  int
  Return type: void
  Modifiers: public
FIELDS( ClassB )
Fields->
 FIELD
  Name: val
  Type: class ClassA
  Modifiers: private
  Value (ref): ClassA@2101973421
   -> Recursively inspect
	CLASS
	Class: ClassA
	SUPERCLASS -> Recursively Inspect
	Superclass : java.lang.Object
		CLASS
		Class: java.lang.Object
		Superclass: NONE
		INTERFACES( java.lang.Object )
		Interfaces-> NONE
		CONSTRUCTORS( java.lang.Object )
		Constructors->
		 CONSTRUCTOR
		  Name: java.lang.Object
		  Parameter types:
		  Modifiers: public
		METHODS( java.lang.Object )
		Methods->
		 METHOD
		  Name: finalize
		  Exceptions->
		  class java.lang.Throwable
		  Parameter types-> NONE
		  Return type: void
		  Modifiers: protected
		 METHOD
		  Name: wait
		  Exceptions->
		  class java.lang.InterruptedException
		  Parameter types-> NONE
		  Return type: void
		  Modifiers: public final
		 METHOD
		  Name: wait
		  Exceptions->
		  class java.lang.InterruptedException
		  Parameter types->
		  long
		  int
		  Return type: void
		  Modifiers: public final
		 METHOD
		  Name: wait
		  Exceptions->
		  class java.lang.InterruptedException
		  Parameter types->
		  long
		  Return type: void
		  Modifiers: public final native
		 METHOD
		  Name: equals
		  Exceptions-> NONE
		  Parameter types->
		  class java.lang.Object
		  Return type: boolean
		  Modifiers: public
		 METHOD
		  Name: toString
		  Exceptions-> NONE
		  Parameter types-> NONE
		  Return type: class java.lang.String
		  Modifiers: public
		 METHOD
		  Name: hashCode
		  Exceptions-> NONE
		  Parameter types-> NONE
		  Return type: int
		  Modifiers: public native
		 METHOD
		  Name: getClass
		  Exceptions-> NONE
		  Parameter types-> NONE
		  Return type: class java.lang.Class
		  Modifiers: public final native
		 METHOD
		  Name: clone
		  Exceptions->
		  class java.lang.CloneNotSupportedException
		  Parameter types-> NONE
		  Return type: class java.lang.Object
		  Modifiers: protected native
		 METHOD
		  Name: notify
		  Exceptions-> NONE
		  Parameter types-> NONE
		  Return type: void
		  Modifiers: public final native
		 METHOD
		  Name: notifyAll
		  Exceptions-> NONE
		  Parameter types-> NONE
		  Return type: void
		  Modifiers: public final native
		 METHOD
		  Name: registerNatives
		  Exceptions-> NONE
		  Parameter types-> NONE
		  Return type: void
		  Modifiers: private static native
		FIELDS( java.lang.Object )
		Fields-> NONE
	INTERFACES( ClassA )
	Interfaces->
	 INTERFACE -> Recursively Inspect
	 java.io.Serializable
		CLASS
		Class: java.io.Serializable
		Superclass: NONE
		INTERFACES( java.io.Serializable )
		Interfaces-> NONE
		CONSTRUCTORS( java.io.Serializable )
		Constructor-> NONE
		METHODS( java.io.Serializable )
		Methods-> NONE
		FIELDS( java.io.Serializable )
		Fields-> NONE
	 INTERFACE -> Recursively Inspect
	 java.lang.Runnable
		CLASS
		Class: java.lang.Runnable
		Superclass: NONE
		INTERFACES( java.lang.Runnable )
		Interfaces-> NONE
		CONSTRUCTORS( java.lang.Runnable )
		Constructor-> NONE
		METHODS( java.lang.Runnable )
		Methods->
		 METHOD
		  Name: run
		  Exceptions-> NONE
		  Parameter types-> NONE
		  Return type: void
		  Modifiers: public abstract
		FIELDS( java.lang.Runnable )
		Fields-> NONE
	CONSTRUCTORS( ClassA )
	Constructors->
	 CONSTRUCTOR
	  Name: ClassA
	  Parameter types:
	  Modifiers: public
	 CONSTRUCTOR
	  Name: ClassA
	  Parameter types:
	  int
	  Modifiers: public
	METHODS( ClassA )
	Methods->
	 METHOD
	  Name: run
	  Exceptions-> NONE
	  Parameter types-> NONE
	  Return type: void
	  Modifiers: public
	 METHOD
	  Name: toString
	  Exceptions-> NONE
	  Parameter types-> NONE
	  Return type: class java.lang.String
	  Modifiers: public
	 METHOD
	  Name: setVal
	  Exceptions->
	  class java.lang.Exception
	  Parameter types->
	  int
	  Return type: void
	  Modifiers: public
	 METHOD
	  Name: getVal
	  Exceptions-> NONE
	  Parameter types-> NONE
	  Return type: int
	  Modifiers: public
	 METHOD
	  Name: printSomething
	  Exceptions-> NONE
	  Parameter types-> NONE
	  Return type: void
	  Modifiers: private
	FIELDS( ClassA )
	Fields->
	 FIELD
	  Name: val
	  Type: int
	  Modifiers: private
	  Value: 3
	 FIELD
	  Name: val2
	  Type: double
	  Modifiers: private
	  Value: 0.2
	 FIELD
	  Name: val3
	  Type: boolean
	  Modifiers: private
	  Value: true
 FIELD
  Name: val2
  Type: class ClassA
  Modifiers: private
  Value (ref): ClassA@685325104
   -> Recursively inspect
	CLASS
	Class: ClassA
	SUPERCLASS -> Recursively Inspect
	Superclass : java.lang.Object
		CLASS
		Class: java.lang.Object
		Superclass: NONE
		INTERFACES( java.lang.Object )
		Interfaces-> NONE
		CONSTRUCTORS( java.lang.Object )
		Constructors->
		 CONSTRUCTOR
		  Name: java.lang.Object
		  Parameter types:
		  Modifiers: public
		METHODS( java.lang.Object )
		Methods->
		 METHOD
		  Name: finalize
		  Exceptions->
		  class java.lang.Throwable
		  Parameter types-> NONE
		  Return type: void
		  Modifiers: protected
		 METHOD
		  Name: wait
		  Exceptions->
		  class java.lang.InterruptedException
		  Parameter types-> NONE
		  Return type: void
		  Modifiers: public final
		 METHOD
		  Name: wait
		  Exceptions->
		  class java.lang.InterruptedException
		  Parameter types->
		  long
		  int
		  Return type: void
		  Modifiers: public final
		 METHOD
		  Name: wait
		  Exceptions->
		  class java.lang.InterruptedException
		  Parameter types->
		  long
		  Return type: void
		  Modifiers: public final native
		 METHOD
		  Name: equals
		  Exceptions-> NONE
		  Parameter types->
		  class java.lang.Object
		  Return type: boolean
		  Modifiers: public
		 METHOD
		  Name: toString
		  Exceptions-> NONE
		  Parameter types-> NONE
		  Return type: class java.lang.String
		  Modifiers: public
		 METHOD
		  Name: hashCode
		  Exceptions-> NONE
		  Parameter types-> NONE
		  Return type: int
		  Modifiers: public native
		 METHOD
		  Name: getClass
		  Exceptions-> NONE
		  Parameter types-> NONE
		  Return type: class java.lang.Class
		  Modifiers: public final native
		 METHOD
		  Name: clone
		  Exceptions->
		  class java.lang.CloneNotSupportedException
		  Parameter types-> NONE
		  Return type: class java.lang.Object
		  Modifiers: protected native
		 METHOD
		  Name: notify
		  Exceptions-> NONE
		  Parameter types-> NONE
		  Return type: void
		  Modifiers: public final native
		 METHOD
		  Name: notifyAll
		  Exceptions-> NONE
		  Parameter types-> NONE
		  Return type: void
		  Modifiers: public final native
		 METHOD
		  Name: registerNatives
		  Exceptions-> NONE
		  Parameter types-> NONE
		  Return type: void
		  Modifiers: private static native
		FIELDS( java.lang.Object )
		Fields-> NONE
	INTERFACES( ClassA )
	Interfaces->
	 INTERFACE -> Recursively Inspect
	 java.io.Serializable
		CLASS
		Class: java.io.Serializable
		Superclass: NONE
		INTERFACES( java.io.Serializable )
		Interfaces-> NONE
		CONSTRUCTORS( java.io.Serializable )
		Constructor-> NONE
		METHODS( java.io.Serializable )
		Methods-> NONE
		FIELDS( java.io.Serializable )
		Fields-> NONE
	 INTERFACE -> Recursively Inspect
	 java.lang.Runnable
		CLASS
		Class: java.lang.Runnable
		Superclass: NONE
		INTERFACES( java.lang.Runnable )
		Interfaces-> NONE
		CONSTRUCTORS( java.lang.Runnable )
		Constructor-> NONE
		METHODS( java.lang.Runnable )
		Methods->
		 METHOD
		  Name: run
		  Exceptions-> NONE
		  Parameter types-> NONE
		  Return type: void
		  Modifiers: public abstract
		FIELDS( java.lang.Runnable )
		Fields-> NONE
	CONSTRUCTORS( ClassA )
	Constructors->
	 CONSTRUCTOR
	  Name: ClassA
	  Parameter types:
	  Modifiers: public
	 CONSTRUCTOR
	  Name: ClassA
	  Parameter types:
	  int
	  Modifiers: public
	METHODS( ClassA )
	Methods->
	 METHOD
	  Name: run
	  Exceptions-> NONE
	  Parameter types-> NONE
	  Return type: void
	  Modifiers: public
	 METHOD
	  Name: toString
	  Exceptions-> NONE
	  Parameter types-> NONE
	  Return type: class java.lang.String
	  Modifiers: public
	 METHOD
	  Name: setVal
	  Exceptions->
	  class java.lang.Exception
	  Parameter types->
	  int
	  Return type: void
	  Modifiers: public
	 METHOD
	  Name: getVal
	  Exceptions-> NONE
	  Parameter types-> NONE
	  Return type: int
	  Modifiers: public
	 METHOD
	  Name: printSomething
	  Exceptions-> NONE
	  Parameter types-> NONE
	  Return type: void
	  Modifiers: private
	FIELDS( ClassA )
	Fields->
	 FIELD
	  Name: val
	  Type: int
	  Modifiers: private
	  Value: 12
	 FIELD
	  Name: val2
	  Type: double
	  Modifiers: private
	  Value: 0.2
	 FIELD
	  Name: val3
	  Type: boolean
	  Modifiers: private
	  Value: true
 FIELD
  Name: val3
  Type: class ClassA
  Modifiers: private
  Value (ref): null
======================================================
